name: Render PlantUML Diagrams

on:
  push:
    branches:
      - main
  workflow_dispatch: # Permette di eseguire il workflow manualmente

jobs:
  job-render-puml:
    runs-on: ubuntu-22.04
    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          persist-credentials: true # Necessario per eseguire il push delle modifiche

      # Step 2: Setup Java environment
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y graphviz

      # Step 4: Download PlantUML jar
      - name: Download PlantUML
        run: |
          mkdir -p tools
          curl -L https://github.com/plantuml/plantuml/releases/latest/download/plantuml.jar -o tools/plantuml.jar

      # Step 5: Cleanup previous PNG files
      - name: Cleanup previous PNG files
        run: |
          echo "Cleaning up old PNG files in output directory..."
          rm -rf DCC_Trasporti_H/PNG/*.png
          echo "Old PNG files removed."

      # Step 6: Render all PlantUML Diagrams
      - name: Render all PlantUML Diagrams
        run: |
          mkdir -p DCC_Trasporti_H/ # Assicura che la directory esista
          echo "Rendering all PlantUML files in DCC_Trasporti_H/ directory..."
          for file in DCC_Trasporti_H/*.puml; do
            [ -f "$file" ] || continue  # Salta se nessun file .puml esiste
            echo "Processing $file"
            java -jar tools/plantuml.jar -tpng "$file" || {
              echo "PlantUML rendering failed for $file! Checking tools and output directory:"
              ls -l tools
              ls -l DCC_Trasporti_H/
              exit 1
            }
          done
          echo "Listing generated files in output directory:"
          ls -l DCC_Trasporti_H/

      # Step 7: Move all PNG files to a subdirectory 'PNG' and rename them with prefix 'img_'
      - name: Move and Rename PNG files
        run: |
          echo "Ensuring PNG directory exists inside DCC_Trasporti_H/"
          mkdir -p DCC_Trasporti_H/PNG
          
          echo "Moving and renaming all PNG files to DCC_Trasporti_H/PNG/"
          for file in DCC_Trasporti_H/*.png; do
            [ -f "$file" ] || continue  # Salta se nessun file .png esiste
            base_name=$(basename "$file")
            mv "$file" "DCC_Trasporti_H/PNG/img_$base_name"
          done
          
          echo "Updated PNG files in PNG directory:"
          ls -l DCC_Trasporti_H/PNG/

      # Step 8: Commit and Push all updated PNG files
      - name: Commit and Push all updated PNG files
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Aggiungi tutti i file PNG dalla nuova cartella
          git add -f DCC_Trasporti_H/PNG/img_*.png

          # Controlla se ci sono modifiche da committare
          if git diff --cached --quiet; then
            echo "No changes to commit. Skipping."
            exit 0
          fi

          # Esegui il commit e il push solo se ci sono modifiche
          git commit -m "Update all PlantUML diagrams and move to PNG subdirectory"
          git push origin main
