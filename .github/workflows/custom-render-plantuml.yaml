name: Render PlantUML Diagrams

on:
  push:
    branches:
      - main
  workflow_dispatch: # Permette di eseguire il workflow manualmente

jobs:
  job-render-puml:
    runs-on: ubuntu-22.04
    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          persist-credentials: true # Necessario per eseguire il push delle modifiche

      # Step 2: Setup Java environment
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y graphviz

      # Step 4: Download PlantUML jar
      - name: Download PlantUML
        run: |
          mkdir -p tools
          curl -L https://github.com/plantuml/plantuml/releases/latest/download/plantuml.jar -o tools/plantuml.jar

      # Step 5: Cleanup previous PNG files
      - name: Cleanup previous PNG files
        run: |
          echo "Cleaning up old PNG files in output directories..."
          rm -rf DCC_Trasporti_H/PNG/*.png
          rm -rf DCC_XBooking/PNG/*.png
          echo "Old PNG files removed."

      # Step 6: Render all PlantUML Diagrams
      - name: Render all PlantUML Diagrams
        run: |
          mkdir -p DCC_Trasporti_H/PNG
          mkdir -p DCC_XBooking/PNG

          echo "Rendering all PlantUML files in DCC_Trasporti_H/ and DCC_XBooking/ directories..."
          for dir in DCC_Trasporti_H DCC_XBooking; do
            for file in $dir/*.puml; do
              [ -f "$file" ] || continue  # Skip if no .puml files exist
              echo "Processing $file"
              java -jar tools/plantuml.jar -tpng "$file" || {
                echo "PlantUML rendering failed for $file! Checking tools and output directory:"
                ls -l tools
                ls -l $dir/
                exit 1
              }
            done
          done
          
          echo "Listing generated files in output directories:"
          ls -l DCC_Trasporti_H/
          ls -l DCC_XBooking/

      # Step 7: Move and Rename PNG files
      - name: Move and Rename PNG files
        run: |
          echo "Ensuring PNG directories exist inside both folders"
          mkdir -p DCC_Trasporti_H/PNG
          mkdir -p DCC_XBooking/PNG
          
          echo "Moving and renaming all PNG files"
          for dir in DCC_Trasporti_H DCC_XBooking; do
            for file in $dir/*.png; do
              [ -f "$file" ] || continue  # Skip if no PNG exists
              base_name=$(basename "$file")
              mv "$file" "$dir/PNG/img_$base_name"
            done
          done
          
          echo "Updated PNG files in PNG directories:"
          ls -l DCC_Trasporti_H/PNG/
          ls -l DCC_XBooking/PNG/

      # Step 8: Commit and Push all updated PNG files
      - name: Commit and Push all updated PNG files
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Add all PNG files from both folders
          git add -f DCC_Trasporti_H/PNG/img_*.png
          git add -f DCC_XBooking/PNG/img_*.png

